nimTitle	mysql	debby/mysql.html	module src/debby/mysql		0
nim	FIELD	debby/mysql.html#FIELD	object FIELD		15
nim	PFIELD	debby/mysql.html#PFIELD	type PFIELD		17
nim	mysql_init	debby/mysql.html#mysql_init,Db	proc mysql_init(MySQL: Db): Db		21
nim	mysql_error	debby/mysql.html#mysql_error,Db	proc mysql_error(MySQL: Db): cstring		23
nim	mysql_real_connect	debby/mysql.html#mysql_real_connect,Db,cstring,cstring,cstring,cstring,cuint,cstring,int	proc mysql_real_connect(MySQL: Db; host: cstring; user: cstring; passwd: cstring;\n                   db: cstring; port: cuint; unix_socket: cstring;\n                   clientflag: int): int		25
nim	mysql_close	debby/mysql.html#mysql_close,Db	proc mysql_close(sock: Db)		36
nim	mysql_query	debby/mysql.html#mysql_query,Db,cstring	proc mysql_query(MySQL: Db; q: cstring): cint		38
nim	mysql_store_result	debby/mysql.html#mysql_store_result,Db	proc mysql_store_result(MySQL: Db): PRES		40
nim	mysql_num_rows	debby/mysql.html#mysql_num_rows,PRES	proc mysql_num_rows(res: PRES): uint64		42
nim	mysql_num_fields	debby/mysql.html#mysql_num_fields,PRES	proc mysql_num_fields(res: PRES): cuint		44
nim	mysql_fetch_row	debby/mysql.html#mysql_fetch_row,PRES	proc mysql_fetch_row(result: PRES): cstringArray		46
nim	mysql_free_result	debby/mysql.html#mysql_free_result,PRES	proc mysql_free_result(result: PRES)		48
nim	mysql_real_escape_string	debby/mysql.html#mysql_real_escape_string,Db,cstring,cstring,int	proc mysql_real_escape_string(MySQL: Db; fto: cstring; from: cstring; len: int): int		50
nim	mysql_insert_id	debby/mysql.html#mysql_insert_id,Db	proc mysql_insert_id(MySQL: Db): uint64		52
nim	mysql_fetch_field_direct	debby/mysql.html#mysql_fetch_field_direct,PRES,cuint	proc mysql_fetch_field_direct(res: PRES; fieldnr: cuint): PFIELD		54
nim	dbError	debby/mysql.html#dbError,Db	proc dbError(db: Db)		58
nim	query	debby/mysql.html#query,Db,string,varargs[Argument,toArgument]	proc query(db: Db; query: string; args: varargs[Argument, toArgument]): seq[Row]		124
nim	openDatabase	debby/mysql.html#openDatabase,string,string,int,string,string	proc openDatabase(database: string; host = "localhost"; port = 3306; user = "root";\n             password = ""): Db		145
nim	close	debby/mysql.html#close,Db	proc close(db: Db)		173
nim	tableExists	debby/mysql.html#tableExists,Db,typedesc[T]	proc tableExists[T](db: Db; t: typedesc[T]): bool		177
nim	createIndexStatement	debby/mysql.html#createIndexStatement,Db,typedesc[T],bool,varargs[string]	proc createIndexStatement[T: ref object](db: Db; t: typedesc[T]; ifNotExists: bool;\n                                    params: varargs[string]): string		190
nim	createTableStatement	debby/mysql.html#createTableStatement,Db,typedesc[T]	proc createTableStatement[T: ref object](db: Db; t: typedesc[T]): string		210
nim	checkTable	debby/mysql.html#checkTable,Db,typedesc[T]	proc checkTable[T: ref object](db: Db; t: typedesc[T])		228
nim	insert	debby/mysql.html#insert,Db,T	proc insert[T: ref object](db: Db; obj: T)		282
nim	query	debby/mysql.html#query,Db,typedesc[T],string,varargs[Argument,toArgument]	proc query[T](db: Db; t: typedesc[T]; query: string;\n         args: varargs[Argument, toArgument]): seq[T]		288
nim	withTransaction	debby/mysql.html#withTransaction.t,Db,	template withTransaction(db: Db; body)		345
nim	sqlDumpHook	debby/mysql.html#sqlDumpHook,bool	proc sqlDumpHook(v: bool): string		360
nim	sqlParseHook	debby/mysql.html#sqlParseHook,string,bool	proc sqlParseHook(data: string; v: var bool)		365
nim	sqlDumpHook	debby/mysql.html#sqlDumpHook,Bytes	proc sqlDumpHook(data: Bytes): string		369
nim	sqlParseHook	debby/mysql.html#sqlParseHook,string,Bytes	proc sqlParseHook(data: string; v: var Bytes)		379
nimgrp	query	debby/mysql.html#query-procs-all	proc		124
nimgrp	sqldumphook	debby/mysql.html#sqlDumpHook-procs-all	proc		360
nimgrp	sqlparsehook	debby/mysql.html#sqlParseHook-procs-all	proc		365
